// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pantryItems     PantryItem[]
  groceryListItems GroceryListItem[]
}

model GroceryListItem {
  id        Int      @id @default(autoincrement())
  name      String
  // category  String? // Replaced by categoryId relation
  purchased Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
}

model PantryItem {
  id        Int      @id @default(autoincrement())
  name      String
  // category  String? // Replaced by categoryId relation
  quantity  String?
  order     Int?
  notes     String?
  status    String @default("InStock") // Using String for SQLite compatibility
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
}
